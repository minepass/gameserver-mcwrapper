/*
 *  This file is part of MinePass, licensed under the MIT License (MIT).
 *
 *  Copyright (c) MinePass.net <http://www.minepass.net>
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */

loadMinecraftConfiguration()

def loadMinecraftConfiguration() {
    project.ext['minecraftEnv'] = hasProperty('env') ? env : 'development'
    println "Minecraft Environment is set to ${project.minecraftEnv}"

    project.ext.coreVersion = '2.0-SNAPSHOT'
    println "Minecraft MP-Core Version is set to ${project.coreVersion}"
}

import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'java'
apply plugin:'application'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

version = "0.18.43" + "-" + (System.getenv("BUILD_NUMBER") ?: "SNAPSHOT")
group = "net.minepass"
archivesBaseName = "MinePass-MinecraftWrapper"
mainClassName = "net.minepass.gs.mc.wrapper.MP_MinecraftWrapper"

processResources {
    filter ReplaceTokens, tokens:[VERSION: project.version]
}

configurations {
    minepass_core
    compile {
        extendsFrom minepass_core
    }
}

dependencies {
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.2'

    if (project.minecraftEnv == 'core_dev') {
        minepass_core(project(":minepass_core")) {
            transitive = true
        }
    } else if (project.minecraftEnv == 'development') {
        minepass_core group: 'net.minepass', name: 'minepass-gameserver', version: "${project.coreVersion}", changing: true
    } else if (project.minecraftEnv == 'production') {
        minepass_core files("minepass-gameserver-${project.coreVersion}.jar")
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'net.minepass.gs.mc.wrapper.MP_MinecraftWrapper'
        attributes "Class-Path": 'minecraft_server.jar'
    }
}

task extractCore(type: Copy) {
    from {  // use of closure defers evaluation until execution time
        configurations.minepass_core.collect { zipTree(it) }
    }
    into "$buildDir/classes/main/"
}

classes.dependsOn extractCore

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}

